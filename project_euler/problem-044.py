# -*- coding: utf-8 -*-
"""
Pentagon numbers
Problem 44
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. 
The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. 
However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and 
difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
"""

import math

def get_pentagonals(goal):
    pass


def is_pentagonal(number):
    return ((1 + math.sqrt(1 + 24 * number)) / 6.0).is_integer()


def get_pentagonal_min_diff(goal):
    pentagonals = get_pentagonals(goal)
    pent_min_diff = []
    small = 0
    big = 1
    while pentagonals[small] > pentagonals[big + 1] - pentagonals[big]:
        if (pentagonals[big] + pentagonals[small]) in pentagonals and (pentagonals[big] - pentagonals[small]) in pentagonals:
            pent_min_diff.append(abs(pentagonals[big] - pentagonals[small]))
    return min(pent_min_diff)


#def get_pentagonal_min_diff(goal):
#    diff_pentagonal = get_diff_pentagonal(goal)
#    sum_and_diff_pentagonal = get_sum_and_diff_pentagonal(goal, diff_pentagonal)
#    for pair in diff_pentagonal:
#        #if 

for i in range(100):
    if is_pentagonal(i):
        print i
    